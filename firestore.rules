rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for users collection
    match /users/{userId} {
      // Allow users to read and write their own document
      allow read, write: if isOwner(userId);
      
      // Allow users to read other users' documents (needed for connection verification)
      allow read: if isAuthenticated();
      
      // Allow users to update connections in other users' documents
      allow update: if isAuthenticated() 
        && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['connections'])
        && request.resource.data.connections[request.auth.uid] != null;
    }

    // Rules for activities collection
    match /activities/{activityId} {
      // Allow users to read and write their own activities
      allow read, write: if isAuthenticated() 
        && (
          resource == null 
          || resource.data.userId == request.auth.uid
        );
    }
  }
} 