rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to check if a user is connected to another user
    function isConnectedUser(userId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)/connections/$(userId));
    }

    // Rules for users collection
    match /users/{userId} {
      // Allow users to read and write their own document
      allow read, write: if isOwner(userId);
      
      // Allow users to read other users' documents (needed for connection verification)
      allow read: if isAuthenticated();
      
      // Allow users to update their own connections
      allow update: if isAuthenticated() && (
        // Allow updating own document
        isOwner(userId) ||
        // Allow adding connection to other user's document
        (
          // Only allow updating the connections field
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['connections']) &&
          // Ensure the connection being added includes the current user's ID
          request.resource.data.connections != null &&
          request.resource.data.connections[request.auth.uid] != null
        )
      );
    }

    // Rules for activities collection
    match /activities/{activityId} {
      // Allow users to read and write their own activities
      // Also allow reading activities from connected users
      allow read: if isAuthenticated() && (
        resource == null ||
        resource.data.userId == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.connections[resource.data.userId] != null
      );
      
      // Allow users to write only their own activities
      allow write: if isAuthenticated() && (
        resource == null ||
        resource.data.userId == request.auth.uid
      );
    }
  }
} 